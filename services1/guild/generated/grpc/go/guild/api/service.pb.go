// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: guild/api/service.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_guild_api_service_proto protoreflect.FileDescriptor

var file_guild_api_service_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x2e, 0x70, 0x62, 0x1a, 0x16, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xe5, 0x08, 0x0a, 0x05, 0x47, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x6d, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x12, 0x15, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x7b, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x7d, 0x3a,
	0x01, 0x2a, 0x12, 0x6a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x12, 0x1c, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x75, 0x69, 0x6c, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x22,
	0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x49, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x6b,
	0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1c, 0x2e,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x2f, 0x7b, 0x61, 0x70, 0x70, 0x49, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x65, 0x0a, 0x0b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x17, 0x2e, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x75, 0x69, 0x6c, 0x64,
	0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x7d, 0x12, 0x63, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x75, 0x69, 0x6c,
	0x64, 0x12, 0x14, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1e, 0x2e,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34,
	0x22, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x6a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67,
	0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x69, 0x64, 0x78, 0x7d,
	0x12, 0x77, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x35, 0x22, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x78, 0x0a, 0x05, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x22, 0x31, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x64, 0x7d, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x7d,
	0x3a, 0x01, 0x2a, 0x12, 0x5c, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12,
	0x19, 0x2e, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x75, 0x69,
	0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_guild_api_service_proto_goTypes = []interface{}{
	(*JoinRequest)(nil),          // 0: guild.pb.JoinRequest
	(*ModifyGuildRequest)(nil),   // 1: guild.pb.ModifyGuildRequest
	(*SearchRequest)(nil),        // 2: guild.pb.SearchRequest
	(*DelRequest)(nil),           // 3: guild.pb.DelRequest
	(*UpdateProfileRequest)(nil), // 4: guild.pb.UpdateProfileRequest
	(*UserListRequest)(nil),      // 5: guild.pb.UserListRequest
	(*ApplyRequest)(nil),         // 6: guild.pb.ApplyRequest
	(*ReplyRequest)(nil),         // 7: guild.pb.ReplyRequest
	(*GetApplyRequest)(nil),      // 8: guild.pb.GetApplyRequest
	(*NothingResponse)(nil),      // 9: guild.pb.NothingResponse
	(*GuildMessage)(nil),         // 10: guild.pb.GuildMessage
	(*SearchResponse)(nil),       // 11: guild.pb.SearchResponse
	(*UserListResponse)(nil),     // 12: guild.pb.UserListResponse
	(*GetApplyResponse)(nil),     // 13: guild.pb.GetApplyResponse
}
var file_guild_api_service_proto_depIdxs = []int32{
	0,  // 0: guild.pb.Guild.JoinGuild:input_type -> guild.pb.JoinRequest
	1,  // 1: guild.pb.Guild.CreateGuild:input_type -> guild.pb.ModifyGuildRequest
	1,  // 2: guild.pb.Guild.ModifyGuild:input_type -> guild.pb.ModifyGuildRequest
	2,  // 3: guild.pb.Guild.SearchGuild:input_type -> guild.pb.SearchRequest
	3,  // 4: guild.pb.Guild.DeleteGuild:input_type -> guild.pb.DelRequest
	4,  // 5: guild.pb.Guild.ChangeMemberGuild:input_type -> guild.pb.UpdateProfileRequest
	5,  // 6: guild.pb.Guild.GetMember:input_type -> guild.pb.UserListRequest
	6,  // 7: guild.pb.Guild.Apply:input_type -> guild.pb.ApplyRequest
	7,  // 8: guild.pb.Guild.Reply:input_type -> guild.pb.ReplyRequest
	8,  // 9: guild.pb.Guild.GetApply:input_type -> guild.pb.GetApplyRequest
	9,  // 10: guild.pb.Guild.JoinGuild:output_type -> guild.pb.NothingResponse
	10, // 11: guild.pb.Guild.CreateGuild:output_type -> guild.pb.GuildMessage
	9,  // 12: guild.pb.Guild.ModifyGuild:output_type -> guild.pb.NothingResponse
	11, // 13: guild.pb.Guild.SearchGuild:output_type -> guild.pb.SearchResponse
	9,  // 14: guild.pb.Guild.DeleteGuild:output_type -> guild.pb.NothingResponse
	9,  // 15: guild.pb.Guild.ChangeMemberGuild:output_type -> guild.pb.NothingResponse
	12, // 16: guild.pb.Guild.GetMember:output_type -> guild.pb.UserListResponse
	9,  // 17: guild.pb.Guild.Apply:output_type -> guild.pb.NothingResponse
	9,  // 18: guild.pb.Guild.Reply:output_type -> guild.pb.NothingResponse
	13, // 19: guild.pb.Guild.GetApply:output_type -> guild.pb.GetApplyResponse
	10, // [10:20] is the sub-list for method output_type
	0,  // [0:10] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_guild_api_service_proto_init() }
func file_guild_api_service_proto_init() {
	if File_guild_api_service_proto != nil {
		return
	}
	file_guild_api_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_guild_api_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_guild_api_service_proto_goTypes,
		DependencyIndexes: file_guild_api_service_proto_depIdxs,
	}.Build()
	File_guild_api_service_proto = out.File
	file_guild_api_service_proto_rawDesc = nil
	file_guild_api_service_proto_goTypes = nil
	file_guild_api_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GuildClient is the client API for Guild service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GuildClient interface {
	// join in a guild
	JoinGuild(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*NothingResponse, error)
	// create a new guild
	CreateGuild(ctx context.Context, in *ModifyGuildRequest, opts ...grpc.CallOption) (*GuildMessage, error)
	// modify guild base info
	ModifyGuild(ctx context.Context, in *ModifyGuildRequest, opts ...grpc.CallOption) (*NothingResponse, error)
	// search guild by Id or text
	SearchGuild(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	// delete guild
	DeleteGuild(ctx context.Context, in *DelRequest, opts ...grpc.CallOption) (*NothingResponse, error)
	// update member profile
	ChangeMemberGuild(ctx context.Context, in *UpdateProfileRequest, opts ...grpc.CallOption) (*NothingResponse, error)
	// get member message
	GetMember(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (*UserListResponse, error)
	// user application
	Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*NothingResponse, error)
	// leader agree or refuse
	Reply(ctx context.Context, in *ReplyRequest, opts ...grpc.CallOption) (*NothingResponse, error)
	// get application list
	GetApply(ctx context.Context, in *GetApplyRequest, opts ...grpc.CallOption) (*GetApplyResponse, error)
}

type guildClient struct {
	cc grpc.ClientConnInterface
}

func NewGuildClient(cc grpc.ClientConnInterface) GuildClient {
	return &guildClient{cc}
}

func (c *guildClient) JoinGuild(ctx context.Context, in *JoinRequest, opts ...grpc.CallOption) (*NothingResponse, error) {
	out := new(NothingResponse)
	err := c.cc.Invoke(ctx, "/guild.pb.Guild/JoinGuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guildClient) CreateGuild(ctx context.Context, in *ModifyGuildRequest, opts ...grpc.CallOption) (*GuildMessage, error) {
	out := new(GuildMessage)
	err := c.cc.Invoke(ctx, "/guild.pb.Guild/CreateGuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guildClient) ModifyGuild(ctx context.Context, in *ModifyGuildRequest, opts ...grpc.CallOption) (*NothingResponse, error) {
	out := new(NothingResponse)
	err := c.cc.Invoke(ctx, "/guild.pb.Guild/ModifyGuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guildClient) SearchGuild(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/guild.pb.Guild/SearchGuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guildClient) DeleteGuild(ctx context.Context, in *DelRequest, opts ...grpc.CallOption) (*NothingResponse, error) {
	out := new(NothingResponse)
	err := c.cc.Invoke(ctx, "/guild.pb.Guild/DeleteGuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guildClient) ChangeMemberGuild(ctx context.Context, in *UpdateProfileRequest, opts ...grpc.CallOption) (*NothingResponse, error) {
	out := new(NothingResponse)
	err := c.cc.Invoke(ctx, "/guild.pb.Guild/ChangeMemberGuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guildClient) GetMember(ctx context.Context, in *UserListRequest, opts ...grpc.CallOption) (*UserListResponse, error) {
	out := new(UserListResponse)
	err := c.cc.Invoke(ctx, "/guild.pb.Guild/GetMember", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guildClient) Apply(ctx context.Context, in *ApplyRequest, opts ...grpc.CallOption) (*NothingResponse, error) {
	out := new(NothingResponse)
	err := c.cc.Invoke(ctx, "/guild.pb.Guild/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guildClient) Reply(ctx context.Context, in *ReplyRequest, opts ...grpc.CallOption) (*NothingResponse, error) {
	out := new(NothingResponse)
	err := c.cc.Invoke(ctx, "/guild.pb.Guild/Reply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guildClient) GetApply(ctx context.Context, in *GetApplyRequest, opts ...grpc.CallOption) (*GetApplyResponse, error) {
	out := new(GetApplyResponse)
	err := c.cc.Invoke(ctx, "/guild.pb.Guild/GetApply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GuildServer is the server API for Guild service.
type GuildServer interface {
	// join in a guild
	JoinGuild(context.Context, *JoinRequest) (*NothingResponse, error)
	// create a new guild
	CreateGuild(context.Context, *ModifyGuildRequest) (*GuildMessage, error)
	// modify guild base info
	ModifyGuild(context.Context, *ModifyGuildRequest) (*NothingResponse, error)
	// search guild by Id or text
	SearchGuild(context.Context, *SearchRequest) (*SearchResponse, error)
	// delete guild
	DeleteGuild(context.Context, *DelRequest) (*NothingResponse, error)
	// update member profile
	ChangeMemberGuild(context.Context, *UpdateProfileRequest) (*NothingResponse, error)
	// get member message
	GetMember(context.Context, *UserListRequest) (*UserListResponse, error)
	// user application
	Apply(context.Context, *ApplyRequest) (*NothingResponse, error)
	// leader agree or refuse
	Reply(context.Context, *ReplyRequest) (*NothingResponse, error)
	// get application list
	GetApply(context.Context, *GetApplyRequest) (*GetApplyResponse, error)
}

// UnimplementedGuildServer can be embedded to have forward compatible implementations.
type UnimplementedGuildServer struct {
}

func (*UnimplementedGuildServer) JoinGuild(context.Context, *JoinRequest) (*NothingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinGuild not implemented")
}
func (*UnimplementedGuildServer) CreateGuild(context.Context, *ModifyGuildRequest) (*GuildMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGuild not implemented")
}
func (*UnimplementedGuildServer) ModifyGuild(context.Context, *ModifyGuildRequest) (*NothingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyGuild not implemented")
}
func (*UnimplementedGuildServer) SearchGuild(context.Context, *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchGuild not implemented")
}
func (*UnimplementedGuildServer) DeleteGuild(context.Context, *DelRequest) (*NothingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGuild not implemented")
}
func (*UnimplementedGuildServer) ChangeMemberGuild(context.Context, *UpdateProfileRequest) (*NothingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeMemberGuild not implemented")
}
func (*UnimplementedGuildServer) GetMember(context.Context, *UserListRequest) (*UserListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMember not implemented")
}
func (*UnimplementedGuildServer) Apply(context.Context, *ApplyRequest) (*NothingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Apply not implemented")
}
func (*UnimplementedGuildServer) Reply(context.Context, *ReplyRequest) (*NothingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reply not implemented")
}
func (*UnimplementedGuildServer) GetApply(context.Context, *GetApplyRequest) (*GetApplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApply not implemented")
}

func RegisterGuildServer(s *grpc.Server, srv GuildServer) {
	s.RegisterService(&_Guild_serviceDesc, srv)
}

func _Guild_JoinGuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuildServer).JoinGuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guild.pb.Guild/JoinGuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuildServer).JoinGuild(ctx, req.(*JoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Guild_CreateGuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyGuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuildServer).CreateGuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guild.pb.Guild/CreateGuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuildServer).CreateGuild(ctx, req.(*ModifyGuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Guild_ModifyGuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyGuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuildServer).ModifyGuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guild.pb.Guild/ModifyGuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuildServer).ModifyGuild(ctx, req.(*ModifyGuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Guild_SearchGuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuildServer).SearchGuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guild.pb.Guild/SearchGuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuildServer).SearchGuild(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Guild_DeleteGuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuildServer).DeleteGuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guild.pb.Guild/DeleteGuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuildServer).DeleteGuild(ctx, req.(*DelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Guild_ChangeMemberGuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuildServer).ChangeMemberGuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guild.pb.Guild/ChangeMemberGuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuildServer).ChangeMemberGuild(ctx, req.(*UpdateProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Guild_GetMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuildServer).GetMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guild.pb.Guild/GetMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuildServer).GetMember(ctx, req.(*UserListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Guild_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuildServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guild.pb.Guild/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuildServer).Apply(ctx, req.(*ApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Guild_Reply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuildServer).Reply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guild.pb.Guild/Reply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuildServer).Reply(ctx, req.(*ReplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Guild_GetApply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuildServer).GetApply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guild.pb.Guild/GetApply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuildServer).GetApply(ctx, req.(*GetApplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Guild_serviceDesc = grpc.ServiceDesc{
	ServiceName: "guild.pb.Guild",
	HandlerType: (*GuildServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "JoinGuild",
			Handler:    _Guild_JoinGuild_Handler,
		},
		{
			MethodName: "CreateGuild",
			Handler:    _Guild_CreateGuild_Handler,
		},
		{
			MethodName: "ModifyGuild",
			Handler:    _Guild_ModifyGuild_Handler,
		},
		{
			MethodName: "SearchGuild",
			Handler:    _Guild_SearchGuild_Handler,
		},
		{
			MethodName: "DeleteGuild",
			Handler:    _Guild_DeleteGuild_Handler,
		},
		{
			MethodName: "ChangeMemberGuild",
			Handler:    _Guild_ChangeMemberGuild_Handler,
		},
		{
			MethodName: "GetMember",
			Handler:    _Guild_GetMember_Handler,
		},
		{
			MethodName: "Apply",
			Handler:    _Guild_Apply_Handler,
		},
		{
			MethodName: "Reply",
			Handler:    _Guild_Reply_Handler,
		},
		{
			MethodName: "GetApply",
			Handler:    _Guild_GetApply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "guild/api/service.proto",
}
