syntax = "proto3";

package guild.pb;
option go_package = "guild/api;pb";

import "guild/api/message.proto";
import "google/api/annotations.proto";

service Guild{
  // join in a guild
  rpc JoinGuild(JoinRequest) returns (NothingResponse){
    option (google.api.http) = {
      post: "/v1/guild/joining/{appId}/{guildId}"
      body: "*"
    };
  };
  // create a new guild
  rpc CreateGuild(ModifyGuildRequest) returns (GuildMessage){
    option (google.api.http) = {
      post: "/v1/guild/creation/{appId}"
      body: "*"
    };
  };
  // modify guild base info
  rpc ModifyGuild(ModifyGuildRequest) returns (NothingResponse){
    option (google.api.http) = {
      post: "/v1/guild/modify/{appId}"
      body: "*"
    };
  };
  // search guild by Id or text
  rpc SearchGuild(SearchRequest) returns (SearchResponse){
    option (google.api.http) = {
      get: "/v1/guild/searching/{appId}"
    };
  };
  // delete guild
  rpc DeleteGuild(DelRequest) returns (NothingResponse){
    option (google.api.http) = {
      delete: "/v1/guild/{appId}/{guildId}"
    };
  }
  // update member profile
  rpc ChangeMemberGuild(UpdateProfileRequest) returns (NothingResponse){
    option (google.api.http) = {
      post: "/v1/guild/change/{appId}/{memberId}/{profileId}"
      body: "*"
    };
  }
  // get member message
  rpc GetMember(UserListRequest) returns (UserListResponse){
    option (google.api.http) = {
      get: "/v1/guild/member/{appId}/{idx}"
    };
  }
  // user application
  rpc Apply(ApplyRequest) returns (NothingResponse){
    option (google.api.http) = {
      post: "/v1/guild/application/{appId}/{userId}/{guildId}"
      body: "*"
    };
  }
  // leader agree or refuse
  rpc Reply(ReplyRequest) returns (NothingResponse){
    option (google.api.http) = {
      post: "/v1/guild/replication/{appId}/{guildId}/{applyId}"
      body: "*"
    };
  }
  // get application list
  rpc GetApply(GetApplyRequest) returns (GetApplyResponse){
    option (google.api.http) = {
      get: "/v1/guild/appList"
    };
  }
}
