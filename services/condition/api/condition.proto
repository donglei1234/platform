syntax = "proto3";

package condition.pb;
option go_package = "condition/api;pb";

service ConditionService {
  rpc Watch (Nothing) returns (stream Changes) {};
  rpc Register (RegisterRequest) returns (Nothing) {};
  rpc Unregister (UnRegisterRequest) returns (Nothing) {};
  rpc Update (UpdateRequest) returns (Nothing) {};
}

message Nothing {}

message UpdateRequest{
 repeated Condition update = 1;
}

message RegisterRequest {
  repeated Condition conditions = 1;
}

message UnRegisterRequest {
  repeated Condition conditions = 1;
}


message Condition {
  enum Status {
    NONE = 0;
    ACTIVE = 1;
    FINISHED = 2;
  }
  enum UpdateStrategy {
    STRATEGY_NONE = 0;
    STRATEGY_REPLACE = 1;
    STRATEGY_ADD = 2;

  }
  int32 ownerId = 1;
  int32 id = 2;
  int32 type = 3;
  repeated int32 params = 4;
  int32 progress = 5;
  string theme = 6;
  Status status = 7;
  UpdateStrategy updateStrategy = 8;
}

message Changes {
  repeated Condition conditions = 1;
}